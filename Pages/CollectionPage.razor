@using Snipster.Data;
@using Snipster.Services;
@using Snipster.Components
@inject IJSRuntime JSRuntime
@inject MongoDbService _mongoDbService
@page "/collections"


    <div class="page-layout">
        <!-- Left Section: Collection List with Create Button -->
    <div class="collection-list">
        <h4 class="collections-heading">Collections</h4>
        <button class="create-collection-btn" @onclick="ShowCreateCollectionModal">+</button>
        <ul>
            @foreach (var collection in collections)
            {
                <li class="collection-item @(selectedCollectionId != null && selectedCollectionId == collection.Id ? "active" : "")">
                    <span @onclick="() => LoadSnippets(collection.Id)">
                        @collection.Title
                    </span>
                    <button class="icon-btn edit-btn" @onclick="() => EditCollection(collection)">
                        <i class="fa fa-edit"></i> 
                    </button>
                    <button class="icon-btn delete-btn" @onclick="() => DeleteCollection(collection.Id)">
                        <i class="fa fa-trash"></i> 
                    </button>
                </li>
            }
        </ul>
    </div>

        <div class="snippet-list">
            <h4 class="snippets-heading">Snippets</h4>
            <button class="create-snippet-btn" @onclick="ShowSnippetFields">+</button>
            <ul>
                @if (snippets != null && snippets.Any())
                {
                    @foreach (var snippet in snippets)
                    {
                        <li class="snippet-item @(selectedSnippet != null && selectedSnippet.Id == snippet.Id ? "active" : "")"
                        @onclick="() => LoadSnippetDetails(snippet.Id)">
                            @snippet.Title
                        </li>
                    }
                }
                else
                {
                    <li>No snippets available</li>
                }
            </ul>
        </div>

        <!-- Right Section: Snippet Details/Editor -->
        <div class="snippet-details">
            @if (isAddingSnippet)
            {
                <!-- Fields for creating a new snippet -->
                <h4>Create New Snippet</h4>
                <EditForm Model="newSnippet" OnValidSubmit="HandleValidSubmitNew">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="title">Title</label>
                        <input type="text" id="title" class="input-element" @bind="newSnippet.Title" placeholder="Enter Title" />
                    </div>

                    <div class="form-group">
                        <label for="collections">Collection</label>
                        <select id="collections" class="dropdown" @bind="selectedCollectionIdCreate">
                            @foreach (var collection in collections)
                            {
                                <option value="@collection.Id">@collection.Title</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="content">Content</label>
                        <textarea id="createContentId" class="textarea" @bind="newSnippet.Content" placeholder="Enter Content" @oninput="AdjustTextAreaHeight"></textarea>
                    </div>

                    <button type="submit" class="btn-submit">Add Snippet</button>
                </EditForm>
            }
            else if (selectedSnippet != null && selectedSnippet != null)
            {
                <!-- Editable form for an existing snippet -->
                <h4>Edit Snippet</h4>
                <EditForm Model="selectedSnippet" OnValidSubmit="HandleValidSubmitEdit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="title">Title</label>
                        <input type="text" id="title" class="input-element" @bind="selectedSnippet.Title" placeholder="Enter Title" />
                    </div>

                    <div class="form-group">
                        <label for="collections">Collection</label>
                        <select id="collections" class="dropdown" @bind="selectedCollectionId">
                            @foreach (var collection in collections)
                            {
                                <option value="@collection.Id">@collection.Title</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="content">Content</label>
                        <textarea id="editContentId" class="textarea" @bind="selectedSnippet.Content" placeholder="Edit Content" @oninput="AdjustTextAreaHeightEdit"></textarea>
                    </div>
                    <button type="submit" class="btn-submit">Save</button>
                    <button type="button" class="btn-delete" @onclick="() => DeleteSnippet(selectedSnippet.Id)">Delete</button>
                </EditForm>
            }
            else
            {
                <p>Select a snippet to view details.</p>
            }
        </div>
    </div>





<!-- Modal for creating a new collection -->
<Modal @ref="createCollectionModal" Title="Create New Collection">
    <EditForm Model="newCollection" OnValidSubmit="async () => await HandleCreateCollection()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Title:</label>
            <input type="text" class="input-element" @bind="newCollection.Title" />
        </div>
        <div>
            <label>Public:</label>
            <InputCheckbox class="input-element" @bind-Value="newCollection.IsPublic" />
        </div>
        <button class="btn-submit" type="submit">Create</button>
    </EditForm>
</Modal>

<!-- Modal for editing a collection -->
<Modal @ref="editCollectionModal" Title="EditCollection">
    <EditForm Model="editCollection" OnValidSubmit="async () => await HandleEditCollection()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Title:</label>
            <input type="text" class="input-element" @bind="editCollection.Title" />
        </div>
        <div>
            <label>Public:</label>
            <InputCheckbox class="input-element" @bind-Value="editCollection.IsPublic" />
        </div>
        <button class="btn-submit" type="submit">Save</button>
    </EditForm>
</Modal>

<Modal @ref="spinnerModal" >

</Modal>



@code {


}

<style>
   


</style>