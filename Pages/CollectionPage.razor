@page "/collections"

@using Snipster.Data;
@using Snipster.Services;
@using Snipster.Components
@inject IJSRuntime JSRuntime
@attribute [Authorize]



<div class="page-layout">
    <!-- Left Section: Collection List -->
    <div class="panel collection-list" style="width: @(isLeftPanelOpen ? "20%" : "5%")">

        <button class="toggle-btn left" @onclick="ToggleLeftPanel">⇆</button>
        <h4 class="collections-heading">Collections</h4>
        <div class="search-bar">
            <input class="searchbar" type="text" @bind="searchCollectionQuery" placeholder="Search collections..." />
            <div class="search-buttons">
                <button class="create-collection-btn search" @onclick="OnSearchCollection">Search</button>
                <button class="create-collection-btn cancel" @onclick="CancelSearchCollection">Clear</button>
            </div>
        </div>
        <button class="create-collection-btn" @onclick="ShowCreateCollectionModal">+</button>
        @if (collections != null && collections.Any())
        {
            <ul>
                @foreach (var collection in collections)
                {
                    <li class="collection-item @(selectedCollectionId != null && selectedCollectionId == collection.Id ? "active" : "")">
                        <span @onclick="() => LoadSnippets(collection.Id)">
                            @collection.Title
                        </span>
                        <button class="icon-btn edit-btn" @onclick="() => EditCollection(collection)">
                            <i class="fa fa-edit"></i>
                        </button>
                        <button class="icon-btn delete-btn" @onclick="() => DeleteCollection(collection.Id)">
                            <i class="fa fa-trash"></i>
                        </button>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="no-snippets">No collections found.</p>
        }
    </div>

    <!-- Middle Section: Snippet List -->
    <div class="panel snippet-list" style="width: @(isMiddlePanelOpen ? "30%" : "5%")">
        <button class="toggle-btn middle" @onclick="ToggleMiddlePanel">⇆</button>
        <h4 class="snippets-heading">Snippets</h4>
        <div class="search-bar">
            <input class="searchbar" type="text" @bind="searchSnippetQuery" placeholder="Search snippets in selected collection..." />
            <div class="search-buttons">
                <button class="create-collection-btn search" @onclick="OnSearchSnippet">Search</button>
                <button class="create-collection-btn cancel" @onclick="CancelSearchSnippet">Clear</button>
            </div>
        </div>
        <button class="create-snippet-btn" @onclick="ShowSnippetFields">+</button>
        <ul>
            @if (snippets != null && snippets.Any())
            {
                @foreach (var snippet in snippets)
                {
                    <li class="snippet-item @(selectedSnippet != null && selectedSnippet.Id == snippet.Id ? "active" : "")"
                    @onclick="() => LoadSnippetDetails(snippet.Id)">
                        @snippet.Title
                    </li>
                }
            }
            else
            {
                <li>No snippets available</li>
            }
        </ul>
    </div>

    <!-- Right Section: Snippet Details/Editor -->
    <div class="panel snippet-details" style="width: @(rightPanelWidth)">
        @if (isAddingSnippet)
        {
            <!-- Fields for creating a new snippet -->
            <h4>Create New Snippet</h4>
            <EditForm Model="newSnippet" OnValidSubmit="HandleValidSubmitNew" >
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <input type="text" id="title" class="input-element" @bind="newSnippet.Title" placeholder="Title" />
@*                     <ValidationMessage For="@(() => newSnippet.Title)" /> *@
                </div>

                <div class="form-group">
                    <input type="text" id="hashtags" class="input-element" @bind="@newSnippet.HashtagsInput" placeholder="Enter hashtags separated by spaces" />
@*                     <ValidationMessage For="@(() => newSnippet.HashtagsInput)" /> *@
                </div>

                <div class="form-group">
                    <select id="collections" class="dropdown" @bind="selectedCollectionIdCreate">
                        @foreach (var collection in collections)
                        {
                            <option value="@collection.Id">@collection.Title</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <textarea id="createContentId" class="textarea" @bind="newSnippet.Content" placeholder="Enter Snippet" @oninput="AdjustTextAreaHeight"></textarea>
     @*                <ValidationMessage For="@(() => newSnippet.Content)" /> *@
                </div>

                @if (isFormValid)
                {
                    <button type="submit" class="btn-submit">Add Snippet </button>
                }
                else
                {
                    <button type="submit" class="btn-submit" disabled>Add Snippet </button>
                }

            </EditForm>
        }
        else if (selectedSnippet != null)
        {
            <!-- Editable form for an existing snippet -->
            <h4>Edit Snippet</h4>
            <EditForm Model="selectedSnippet" OnValidSubmit="HandleValidSubmitEdit" Context="formContext2">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <input type="text" id="title" class="input-element" @bind="selectedSnippet.Title" placeholder="Title" />
                </div>

                <div class="form-group">
                    <input type="text" id="hashtags" class="input-element" @bind="@selectedSnippet.HashtagsInput" placeholder="Enter hashtags separated by spaces" />

                    @if (HashtagsInput != null && ValidHashtags.Count != HashtagsInput.Split(' ').Length)
                    {
                        <p class="error-message">Some hashtags are invalid. Ensure they start with `#` and contain no spaces.</p>
                    }
                </div>

                <div class="form-group">
                    <select id="collections" class="dropdown" @bind="selectedCollectionId">
                        @foreach (var collection in collections)
                        {
                            <option value="@collection.Id">@collection.Title</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <textarea id="editContentId" class="textarea" @bind="selectedSnippet.Content" placeholder="Enter Snippet" @oninput="AdjustTextAreaHeightEdit"></textarea>
                </div>
                @if (isFormValid)
                {
                    <button type="submit" class="btn-submit">Save</button>
                }
                else
                {
                    <button type="submit" class="btn-submit" disabled>Save</button>
                }

                <button type="button" class="btn-delete" @onclick="() => DeleteSnippet(selectedSnippet.Id)">Delete</button>
            </EditForm>
        }
        else
        {
            <p>Select a snippet to view details.</p>
        }
    </div>
</div>





<!-- Modal for creating a new collection -->
<Modal @ref="createCollectionModal" Title="Create New Collection">
    <EditForm Model="newCollection" OnValidSubmit="async () => await HandleCreateCollection()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="modal-body-edit">
            <div class="form-group">
                <label>Title:</label>
                <InputText class="form-input" @bind-Value="editCollection.Title" />
            </div>


            <div class="form-group">
                <label class="inline">
                    Public:
                    <InputCheckbox class="checkbox-element" @bind-Value="newCollection.IsPublic" />
                </label>
            </div>

            <div class="form-group">
                <button class="create-collection-btn" type="submit">Create</button>
            </div>

        </div>
    </EditForm>
</Modal>

<!-- Modal for editing a collection -->
<Modal @ref="editCollectionModal" Title="Edit Collection">
    <EditForm Model="editCollection" OnValidSubmit="async () => await HandleEditCollection()">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="modal-body-edit">
            <div class="form-group">
                <label>Title:</label>
                <InputText class="form-input" @bind-Value="editCollection.Title" />
            </div>

            <div class="form-group">
                <label class="inline">
                    Public:
                    <InputCheckbox class="checkbox-element" @bind-Value="editCollection.IsPublic" />
                </label>
            </div>

            <div class="form-group">
                <button class="create-collection-btn" type="submit">Save</button>
            </div>
        </div>
    </EditForm>
</Modal>

<Modal @ref="spinnerModal">

</Modal>



@code {


}

<style>



</style>