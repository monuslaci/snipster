@page "/snippets"

@using Snipster.Data;
@using Snipster.Services;
@using Snipster.Components
@attribute [Authorize]



<div class="page-container">
@* <h2>Search Snippets</h2> *@

@* <button class="create-snippet-btn" @onclick="ShowCreateSnippetModal">Create New Snippet</button> *@

<div class="search-bar">
    <input class="searchbar" type="text" @bind="searchSnippetQuery" placeholder="Search snippets..." />
    <div class="search-buttons">
        <button class="create-collection-btn search" @onclick="OnSearchSnippet">Search</button>
        <button class="create-collection-btn cancel" @onclick="CancelSearchSnippet">Clear</button>
    </div>
</div>

@if (filteredSnippets!= null &&  filteredSnippets.Any())
{
    <div class="snippet-container">
        @foreach (var snippet in filteredSnippets)
        {
            <div class="snippet-card">
                <div class="snippet-header">
                    <h3>@snippet.Title</h3>
                </div>
                <div class="snippet-content">
                    <p>@snippet.Content</p>
                </div>
                <div class="snippet-collections">
                    <strong>Collections:</strong>
                    @if (relatedCollections.ContainsKey(snippet.Id))
                    {
                        <span>@string.Join(", ", relatedCollections[snippet.Id])</span>
                    }
                    else
                    {
                        <span>Not added to collection yet..</span>
                    }
                </div>
                <div class="snippet-actions">
@*                     <button class="edit-btn" @onclick="() => EditSnippet(snippet)">Edit</button>
                    <button class="delete-btn" @onclick="() => DeleteSnippet(snippet.Id)">Delete</button> *@
                        <button class="edit-btn" @onclick="() => OpenSnippet(snippet.Id)">Open</button>
                </div>
            </div>
        }
            <p class="result">@filteredSnippets.Count() results</p>
    </div>
}
else
{
    <p class="no-snippets">No snippets found..</p>
}
</div>

<!-- Modal for creating snippet -->
<Modal @ref="createSnippetModal" Title="Add New Snippet">
    <EditForm Model="newSnippet" OnValidSubmit="HandleValidSubmitNew">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="title">Title:</label>
            <InputText id="title" @bind-Value="newSnippet.Title" placeholder="Enter Title" />
        </div>

        <div>
            <label for="content">Content:</label>
            <InputText id="content" @bind-Value="newSnippet.Content" placeholder="Enter Content" />
        </div>

        <button type="submit">Add Snippet</button>
    </EditForm>
</Modal>

<!-- Modal for editing snippet -->
<Modal @ref="createSnippetModal" Title="Edit Snippet">
    <EditForm Model="newSnippet" OnValidSubmit="HandleValidSubmit">
        <div>
            <label for="title">Title:</label>
            <InputText id="title" @bind-Value="newSnippet.Title" placeholder="Enter Title" />
        </div>
        <div>
            <label>Content:</label>
            <InputText @bind-Value="newSnippet.Content" />
        </div>
        <div>
            <label>Collections:</label>
            <select multiple @onchange="OnCollectionSelectionChanged">
                @foreach (var collection in allCollections)
                {
                    <option value="@collection.Id" selected="@selectedCollectionIds.Contains(collection.Id)">
                        @collection.Title
                    </option>
                }
            </select>
        </div>
        <button type="submit">Save Snippet</button>
    </EditForm>
</Modal>

<Modal @ref="editSnippetModal" Title="Edit Snippet">
    <EditForm Model="newSnippet" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- Modal Body -->
        <div class="modal-body-edit">
            <div class="form-group">
                <label for="title">Title:</label>
                <InputText id="title" class="form-input" @bind-Value="newSnippet.Title" placeholder="Enter Title" />
            </div>

            <div class="form-group">
                <label for="content">Content:</label>
                <InputTextArea id="content" class="form-input content-area" @bind-Value="newSnippet.Content" placeholder="Enter Content" />
            </div>

            <div class="form-group">
                <label for="collections">Collections:</label>
                <select id="collections" multiple class="form-input" @bind="selectedCollectionIds">
                    @foreach (var collection in allCollections)
                    {
                        <option value="@collection.Id">@collection.Title</option>
                    }
                </select>
            </div>
        </div>

        <!-- Modal Footer -->
        <div class="modal-footer">
            <button type="submit" class="modal-btn save-btn">Save</button>
        </div>
    </EditForm>
</Modal>

<Modal @ref="spinnerModal">

</Modal>


@code {


}

<style>
    body {
        background: #f4f4f7 !important;
    }

    .page-container {
        display: flex;
        flex-direction: column;
        align-items: center;

        min-height: 100vh; /* Ensure full-page height */
        padding: 20px;
    }
    .snippet-container {
        display: flex;
        flex-direction: column; 
        align-items: center; 
        justify-content: center; 
        margin: 0 auto; 
    }

    .create-collection-btn, .create-snippet-btn {
        display: block;
        margin-bottom: 15px;
        padding: 10px;
        background-color: rgb(83, 114, 201);
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .create-collection-btn:hover, .create-snippet-btn:hover {
        display: block;
        margin-bottom: 15px;
        padding: 10px;
        background-color: rgb(83, 114, 201, 0.4);
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .snippet-table {
        width: 100%;
        border-collapse: collapse;
    }

    .snippet-table th, .snippet-table td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .snippet-table th {
        background-color: #f2f2f2;
    }

    .snippet-table td button {
        margin-right: 5px;
    }

    select[multiple] {
        height: 200px;
        width: 100%;
    }

    .modal-body-edit {
        display: flex;
        flex-direction: column;
        gap: 1.5em;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

    .form-group label {
        font-weight: bold;
        margin-bottom: 0.3em;
        color: #333;
    }

    .form-input {
        padding: 0.8em;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 1rem;
    }
    .content-area {
        height: 200px;
        resize: vertical;
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 1em;
        margin-top: 1.5em;
    }

    .modal-btn {
        padding: 0.6em 1.2em;
        font-size: 1rem;
        border-radius: 5px;
        cursor: pointer;
        border: none;
    }

    .save-btn {
        background-color: #4CAF50;
        color: #fff;
    }

    .cancel-btn {
        background-color: #f44336;
        color: #fff;
    }

    .modal-content {
        width: 600px;
        max-width: 90%;
        padding: 1.5em;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
    }



    .snippet-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        width: 100%; 
        min-width: 600px;
        max-width: 600px;
        max-height: 300px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        transition: transform 0.2s ease-in-out;
        margin-top: 20px;
    }

    .snippet-card:hover {
        transform: scale(1.05);
    }

    .snippet-header h3 {
        margin: 0;
        font-size: 18px;
        color: #333;
    }

    .snippet-content p {
        font-size: 14px;
        color: #555;
        overflow: hidden;
        word-wrap: break-word; /* Ensures long words break */
        overflow-wrap: break-word; /* Alternative for browser support */
        white-space: pre-wrap; /* Ensures line breaks and text wrapping */

        max-width: 100%; /* Prevents horizontal overflow */
        overflow: hidden; /* Prevents unintended overflow */

        flex-grow: 1; /* Allows content to take available space */
        overflow: auto; /* Enables scrollbar when needed */
        max-height: 150px; /* Maximum content height before scrolling */
        padding-right: 5px; /* Add space for scrollbar */
    }

    .snippet-collections {
        font-size: 12px;
        color: #777;
        margin-top: 10px;
    }

    .snippet-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 15px;
    }

    .edit-btn, .delete-btn {
        padding: 8px 12px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
    }

    .edit-btn {
        background: #007bff;
        color: white;
    }

    .delete-btn {
        background: #dc3545;
        color: white;
    }

    .no-snippets {
        text-align: center;
        font-size: 16px;
        color: #666;
        margin-top: 20px;
    }


    .search-bar {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column; /* Stack elements vertically */
        gap: 8px;
        padding: 10px;
        background-color: var(--background-color);
        border-radius: 8px;
        width: 55vh;
        margin-bottom: 15px;
    }

    .search-bar input {
        padding: 8px;
        border: 1px solid var(--primary-color);
        border-radius: 6px;
        font-size: 14px;
        width: 55vh;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }


    .search-buttons {
        display: flex; /* Ensure buttons are in the same row */
        gap: 10px; /* Add space between buttons */
        justify-content: center; /* Center the buttons */
    }

    .search-buttons .create-collection-btn {
        flex: 1; /* Make buttons equal width */
        padding: 8px 12px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        transition: background 0.3s ease;
        text-align: center;
    }

    .search-buttons .create-collection-btn.search {
        background-color: #004080; /* Deep blue */
        color: white;
    }

    .search-buttons .create-collection-btn.search:hover {
        background-color: #003366; /* Darker blue */
    }

    .search-buttons .create-collection-btn.cancel {
        background-color: #D9534F; /* Soft red */
        color: white;
    }

    .result{
        margin-top: 20px;
    }
</style>